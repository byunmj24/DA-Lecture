// JSON 이란?
JavaScript Object Notation
키와 값으로 구성된 자바스크립트의 데이타 형태
파이썬의 JSON 레퍼런스 https://docs.python.org/ko/3/library/json.html


// JSON 예시 - 키와 값의 구조
{
    "이름": "서태웅",
    "성별": "남",
    "학교": "북산 고등학교 1학년 10반 22번",
    "특기": "농구",
    "포지션": "스몰 포워드(SF)",
    "별명": "여우",
    "체격": {"키": "187 ㎝", "몸무게": " 75 ㎏", "혈액형": " AB형(Rh+)"},
    "라이벌": ["윤대협", "정우성"]
 }


// json 샘플 사이트 이용하기
http://jsonplaceholder.typicode.com/

url 요청 => json 데이타 => 리스트 딕셔너리 => 데이타프레임


# 1) json url 요청  => 문자열
url = 'http://jsonplaceholder.typicode.com/todos'
res = requests.get(url)
text = res.text


# 2) 리스트 딕셔너리 구조화 
todos = json.loads(text)


# 3) 리스트 딕셔너리 => 데이타프레임 
df_todos = pd.DataFrame(todos, columns=['userId', 'id', 'title', 'completed'])


# =================================
# NAVER API 검색 서비스


# 네이버 블로그 검색 API
https://developers.naver.com/docs/serviceapi/search/blog/blog.md#%EB%B8%94%EB%A1%9C%EA%B7%B8

open api 신청 => 아이디와 키 확인
api 요청 => json
json => 리스트 딕셔너리
리스트 딕셔너리 => 데이타프레임



# 네이버 검색 Open API 예제 - 블로그 검색
import os
import sys
import urllib.request
client_id = "YOUR_CLIENT_ID"
client_secret = "YOUR_CLIENT_SECRET"
encText = urllib.parse.quote("검색할 단어")
url = "https://openapi.naver.com/v1/search/blog?query=" + encText # json 결과
# url = "https://openapi.naver.com/v1/search/blog.xml?query=" + encText # xml 결과
request = urllib.request.Request(url)
request.add_header("X-Naver-Client-Id",client_id)
request.add_header("X-Naver-Client-Secret",client_secret)
response = urllib.request.urlopen(request)
rescode = response.getcode()
if(rescode==200):
    response_body = response.read()
    print(response_body.decode('utf-8'))
else:
    print("Error Code:" + rescode)


# json => 딕셔너리
blog = json.loads(response_body.decode('utf-8'))


# 딕셔너리 => 리스트 딕셔너리 
blog_list = blog['items']


# 리스트 딕셔너리 => 데이타프레임 
df_blog = pd.DataFrame(blog_list, columns=['title', 'link', 'description', 
                                'bloggername','bloggerlink', 'postdate' ])

# ===================================
XML이란?
eXtensible Markup Language

다목적의 성격을 가진 마크업언어

https://www.w3schools.com/xml/xml_tree.asp

<태그 속성=값>
 내용
</태그>


<태그 />


# xmltodict 라이브러리
pip install xmltodict
xml => dict


import requests
import xmltodict
import json
import pandas as pd

with open('country_data.xml', 'r') as file:
    xml_string = file.read()

temp = xmltodict.parse(xml_string)

dict = json.loads(json.dumps(temp))

df_country = pd.DataFrame(dict['data']['country'], columns=['@name', 'rank', 'year', 'gdppc'])


# ================================

공공데이타포탈의 API 서비스 이용하기
https://www.data.go.kr/
회원 가입후에 API서비스 신청
공공데이터활용지원센터_보건복지부 코로나19 감염 현황
https://www.data.go.kr/tcs/dss/selectApiDataDetailView.do?publicDataPk=15043376
[활용신청] 클릭후 서비스키 정보 확인 [마이페이지]-[오픈 API]-[개발 계정]
인증키 확인 



# 페이지 요청 

url = 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19GenAgeCaseInfJson'
# 서비스키 설정 - 디코딩한 서비스키 이용 
serviceKey = ''

params ={'serviceKey' : serviceKey, 
         'pageNo' : '1', 
         'numOfRows' : '10', 
         'startCreateDt' : '20200101', 
         'endCreateDt' : '20211118' } 

response = requests.get(url, params=params)
xml_string = response.text



# 2) 리스트 딕셔너리 구조화 
temp = xmltodict.parse(xml_string)
dict = json.loads(json.dumps(temp))











